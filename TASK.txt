FIRST CODE:

  import 'package:flutter/material.dart';
import 'package:flutter/cupertino.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Travel App',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        fontFamily: 'Arial',
        scaffoldBackgroundColor: const Color(0xFFF5F6F8),
      ),
      home: const HomePage(),
    );
  }
}

class HomePage extends StatefulWidget {
  const HomePage({Key? key}) : super(key: key);

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  int _selectedIndex = 0;

  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFFF5F6F8),
      body: SafeArea(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              const HeaderSection(),
              const SizedBox(height: 24),
              const SearchBar(),
              const SizedBox(height: 24),
              const PopularPlacesSection(),
              const SizedBox(height: 24),
              Expanded(
                child: ListView(
                  scrollDirection: Axis.horizontal,
                  children: const [
                    PlaceCard(
                      imageUrl:
                          "https://media.istockphoto.com/id/1341288649/photo/75mpix-panorama-of-beautiful-mount-ama-dablam-in-himalayas-nepal.jpg?s=1024x1024&w=is&k=20&c=pxNX4Ns19juNzCiJInjnjnWjzugXnZBLblSge_rNKLs=",
                      placeName: "Mount Fuji, Tokyo",
                      location: "Tokyo, Japan",
                      rating: "4.8",
                    ),
                    SizedBox(width: 16),
                    PlaceCard(
                      imageUrl:
                          "https://images.pexels.com/photos/31287317/pexels-photo-31287317/free-photo-of-scenic-view-of-boat-on-lake-with-hilltop-chapel.jpeg?auto=compress&cs=tinysrgb&w=1200",
                      placeName: "Andes, South America",
                      location: "South America",
                      rating: "4.5",
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomNavigationBar(
        items: <BottomNavigationBarItem>[
          BottomNavigationBarItem(
            icon: Stack(
              children: [
                const Icon(Icons.home, color: Colors.grey),
                Positioned(
                  top: 0.0,
                  right: 0.0,
                  child: Container(
                    padding: const EdgeInsets.all(1),
                    decoration: BoxDecoration(
                      color: Colors.red,
                      borderRadius: BorderRadius.circular(6),
                    ),
                    constraints: const BoxConstraints(
                      minWidth: 12,
                      minHeight: 12,
                    ),
                  ),
                )
              ],
            ),
            label: 'Home',
            backgroundColor: Colors.white,
          ),
          const BottomNavigationBarItem(
            icon: Icon(Icons.access_time, color: Colors.grey),
            label: 'Timeline',
            backgroundColor: Colors.white,
          ),
          const BottomNavigationBarItem(
            icon: Icon(Icons.favorite_border, color: Colors.grey),
            label: 'Favorites',
            backgroundColor: Colors.white,
          ),
          const BottomNavigationBarItem(
            icon: Icon(Icons.person_outline, color: Colors.grey),
            label: 'Profile',
            backgroundColor: Colors.white,
          ),
        ],
        type: BottomNavigationBarType.fixed,
        currentIndex: _selectedIndex,
        selectedItemColor: Colors.black,
        unselectedItemColor: Colors.grey,
        showSelectedLabels: false,
        showUnselectedLabels: false,
        onTap: _onItemTapped,
      ),
    );
  }
}

class HeaderSection extends StatelessWidget {
  const HeaderSection({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: const [
            Text(
              "Hi, David ðŸ‘‹",
              style: TextStyle(
                fontSize: 24,
                fontWeight: FontWeight.bold,
              ),
            ),
            Text(
              "Explore the world",
              style: TextStyle(
                fontSize: 16,
                color: Colors.grey,
              ),
            ),
          ],
        ),
        const CircleAvatar(
          backgroundImage: NetworkImage(
            "https://www.gstatic.com/flutter-onestack-prototype/genui/example_1.jpg",
          ),
        ),
      ],
    );
  }
}

class SearchBar extends StatelessWidget {
  const SearchBar({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Row(
      children: [
        Expanded(
          child: CupertinoSearchTextField(
            placeholder: "Search places",
            padding: const EdgeInsets.all(12),
            decoration: BoxDecoration(
              color: Colors.white,
              borderRadius: BorderRadius.circular(25),
              border: Border.all(color: Colors.grey.shade300),
            ),
          ),
        ),
        const SizedBox(width: 8),
        Container(
          decoration: BoxDecoration(
            color: Colors.white,
            borderRadius: BorderRadius.circular(25),
            border: Border.all(color: Colors.grey.shade300),
          ),
          padding: const EdgeInsets.all(12),
          child: const Icon(Icons.tune),
        ),
      ],
    );
  }
}

class PopularPlacesSection extends StatelessWidget {
  const PopularPlacesSection({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            const Text(
              "Popular places",
              style: TextStyle(
                fontSize: 18,
                fontWeight: FontWeight.bold,
              ),
            ),
            TextButton(
              onPressed: () {},
              child: const Text(
                "View all",
                style: TextStyle(color: Colors.grey),
              ),
            ),
          ],
        ),
        SizedBox(
          height: 40,
          child: ListView(
            scrollDirection: Axis.horizontal,
            children: [
              ElevatedButton(
                onPressed: () {},
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.grey[800],
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(20),
                  ),
                ),
                child: const Text(
                  "Most Viewed",
                  style: TextStyle(color: Colors.white),
                ),
              ),
              const SizedBox(width: 16),
              Padding(
                padding: const EdgeInsets.only(left: 8.0),
                child: OutlinedButton(
                  onPressed: () {},
                  style: OutlinedButton.styleFrom(
                    side: BorderSide(color: Colors.grey.shade300),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(20),
                    ),
                  ),
                  child: Text(
                    "Nearby",
                    style: TextStyle(color: Colors.grey.shade700),
                  ),
                ),
              ),
              const SizedBox(width: 16),
              Padding(
                padding: const EdgeInsets.only(left: 8.0),
                child: OutlinedButton(
                  onPressed: () {},
                  style: OutlinedButton.styleFrom(
                    side: BorderSide(color: Colors.grey.shade300),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(20),
                    ),
                  ),
                  child: Text(
                    "Latest",
                    style: TextStyle(color: Colors.grey.shade700),
                  ),
                ),
              ),
            ],
          ),
        ),
      ],
    );
  }
}

class PlaceCard extends StatelessWidget {
  final String imageUrl;
  final String placeName;
  final String location;
  final String rating;

  const PlaceCard({
    Key? key,
    required this.imageUrl,
    required this.placeName,
    required this.location,
    required this.rating,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Container(
      width: 240,
      decoration: BoxDecoration(
        borderRadius: BorderRadius.circular(20),
        image: DecorationImage(
          image: NetworkImage(imageUrl),
          fit: BoxFit.cover,
        ),
      ),
      child: Stack(
        children: [
          Positioned(
            top: 10,
            right: 10,
            child: Container(
              decoration: BoxDecoration(
                color: Colors.white.withOpacity(0.3),
                shape: BoxShape.circle,
              ),
              child: IconButton(
                icon: const Icon(
                  Icons.favorite_border,
                  color: Colors.white,
                ),
                onPressed: () {},
              ),
            ),
          ),
          Positioned(
            bottom: 10,
            left: 10,
            right: 10,
            child: Container(
              padding: const EdgeInsets.all(12),
              decoration: BoxDecoration(
                color: Colors.black.withOpacity(0.5),
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    placeName,
                    style: const TextStyle(
                      color: Colors.white,
                      fontWeight: FontWeight.bold,
                      fontSize: 14,
                    ),
                  ),
                  Row(
                    children: [
                      const Icon(
                        Icons.location_on,
                        color: Colors.white,
                        size: 14,
                      ),
                      Text(
                        location,
                        style: const TextStyle(
                          color: Colors.white,
                          fontSize: 12,
                        ),
                      ),
                      const Spacer(),
                      const Icon(
                        Icons.star,
                        color: Colors.white,
                        size: 14,
                      ),
                      Text(
                        rating,
                        style: const TextStyle(
                          color: Colors.white,
                          fontSize: 12,
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}




SECOND CODE:
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

void main() {
  runApp(
    ChangeNotifierProvider<CoffeeData>(
      create: (context) => CoffeeData(),
      builder: (context, child) => const MyApp(),
    ),
  );
}

class CoffeeData extends ChangeNotifier {
  String location = 'Bilzen, Tanjungbalai';
  String searchText = '';
  String profileImageUrl =
      "https://www.gstatic.com/flutter-onestack-prototype/genui/example_1.jpg";

  void setLocation(String newLocation) {
    location = newLocation;
    notifyListeners();
  }

  void setSearchText(String newText) {
    searchText = newText;
    notifyListeners();
  }

  void setProfileImageUrl(String newImageUrl) {
    profileImageUrl = newImageUrl;
    notifyListeners();
  }
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Coffee App',
      theme: ThemeData(
        scaffoldBackgroundColor: Colors.white, // Set the overall background color to white
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.white),
        useMaterial3: true,
      ),
      home: const CoffeeHomePage(),
    );
  }
}

class CoffeeHomePage extends StatefulWidget {
  const CoffeeHomePage({super.key});

  @override
  State<CoffeeHomePage> createState() => _CoffeeHomePageState();
}

class _CoffeeHomePageState extends State<CoffeeHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              const Text(
                'Groups',
                style: TextStyle(
                    fontSize: 24 * 1.4,
                    fontWeight: FontWeight.bold,
                    color: Colors.grey),
              ),
              const SizedBox(height: 16 * 1.4),
              Container(
                decoration: BoxDecoration(
                  color: Colors.black.withOpacity(0.8),
                  borderRadius: BorderRadius.circular(16 * 1.4),
                ),
                padding: const EdgeInsets.all(16 * 1.4),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            const Text(
                              'Location',
                              style: TextStyle(fontSize: 12 * 1.4, color: Colors.grey),
                            ),
                            Row(
                              children: [
                                Consumer<CoffeeData>(
                                  builder: (context, coffeeData, child) => Text(
                                    coffeeData.location,
                                    style: const TextStyle(color: Colors.white, fontSize: 16 * 1.4),
                                  ),
                                ),
                                const Icon(Icons.arrow_drop_down,
                                    color: Colors.white),
                              ],
                            ),
                          ],
                        ),
                        Consumer<CoffeeData>(
                          builder: (context, coffeeData, child) =>
                              GestureDetector(
                            onTap: () {
                              coffeeData.setProfileImageUrl(
                                  "https://www.gstatic.com/flutter-onestack-prototype/genui/example_1.jpg");
                            },
                            child: CircleAvatar(
                              radius: 25 * 1.4,
                              backgroundImage:
                                  NetworkImage(coffeeData.profileImageUrl),
                            ),
                          ),
                        ),
                      ],
                    ),
                    const SizedBox(height: 8 * 1.4),
                    Row(
                      children: [
                        const Icon(Icons.search, color: Colors.grey),
                        const SizedBox(width: 8 * 1.4),
                        Expanded(
                          child: TextField(
                            decoration: const InputDecoration(
                              hintText: 'Search coffee',
                              hintStyle: TextStyle(color: Colors.grey),
                              border: InputBorder.none,
                            ),
                            style: const TextStyle(color: Colors.white, fontSize: 14 * 1.4),
                            onChanged: (text) {
                              Provider.of<CoffeeData>(context, listen: false)
                                  .setSearchText(text);
                            },
                          ),
                        ),
                        const Icon(Icons.tune, color: Colors.grey),
                      ],
                    ),
                    const SizedBox(height: 16 * 1.4),
                    Stack(
                      children: [
                        ClipRRect(
                          borderRadius: BorderRadius.circular(12 * 1.4),
                          child: Image.network(
                            "https://images.pexels.com/photos/302896/pexels-photo-302896.jpeg?auto=compress&cs=tinysrgb&w=1200",
                            height: 200 * 1.4,
                            width: double.infinity,
                            fit: BoxFit.cover,
                          ),
                        ),
                        Positioned(
                          top: 8 * 1.4,
                          left: 8 * 1.4,
                          child: Container(
                            padding: const EdgeInsets.symmetric(
                                horizontal: 8 * 1.4, vertical: 4 * 1.4),
                            decoration: BoxDecoration(
                              color: Colors.red,
                              borderRadius: BorderRadius.circular(8 * 1.4),
                            ),
                            child: const Text(
                              'Promo',
                              style:
                                  TextStyle(color: Colors.white, fontSize: 12 * 1.4),
                            ),
                          ),
                        ),
                        const Positioned(
                          bottom: 16 * 1.4,
                          left: 16 * 1.4,
                          child: Text(
                            'Buy one get\none Free',
                            style: TextStyle(
                                color: Colors.white,
                                fontSize: 20 * 1.4,
                                fontWeight: FontWeight.bold,
                                backgroundColor: Colors.black),
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
              const SizedBox(height: 16 * 1.4),
              SingleChildScrollView(
                scrollDirection: Axis.horizontal,
                child: Row(
                  children: [
                    _buildCoffeeTypeButton(
                      text: 'Cappuccino',
                      isSelected: true,
                    ),
                    const SizedBox(width: 8 * 1.4),
                    _buildCoffeeTypeButton(text: 'Machiatto'),
                    const SizedBox(width: 8 * 1.4),
                    _buildCoffeeTypeButton(text: 'Latte'),
                    const SizedBox(width: 8 * 1.4),
                    _buildCoffeeTypeButton(text: 'Americano'),
                  ],
                ),
              ),
              const SizedBox(height: 16 * 1.4),
              Wrap(
                spacing: 16.0 * 1.4,
                runSpacing: 16.0 * 1.4,
                alignment: WrapAlignment.spaceEvenly,
                children: const [
                  CoffeeCard(
                    imageUrl:
                        "https://images.pexels.com/photos/2396220/pexels-photo-2396220.jpeg?auto=compress&cs=tinysrgb&w=1200",
                    rating: 4.8,
                    name: 'Cappuccino',
                    description: 'with Chocolate',
                    price: '4.53',
                  ),
                  CoffeeCard(
                    imageUrl:
                        "https://images.pexels.com/photos/3879495/pexels-photo-3879495.jpeg?auto=compress&cs=tinysrgb&w=1200",
                    rating: 4.8,
                    name: 'Cappuccino',
                    description: 'with Chocolate',
                    price: '4.53',
                  ),
                  CoffeeCard(
                    imageUrl:
                        "https://images.pexels.com/photos/3020919/pexels-photo-3020919.jpeg?auto=compress&cs=tinysrgb&w=1200",
                    rating: 4.5,
                    name: 'Cappuccino',
                    description: 'with Chocolate',
                    price: '4.53',
                  ),
                  CoffeeCard(
                    imageUrl:
                        "https://images.pexels.com/photos/2907301/pexels-photo-2907301.jpeg?auto=compress&cs=tinysrgb&w=1200",
                    rating: 4.0,
                    name: 'Cappuccino',
                    description: 'with Chocolate',
                    price: '4.53',
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildCoffeeTypeButton({required String text, bool isSelected = false}) {
    return ElevatedButton(
      onPressed: () {},
      style: ElevatedButton.styleFrom(
        backgroundColor: isSelected ? const Color(0xFF795548) : Colors.grey.shade200,
        foregroundColor: isSelected ? Colors.white : Colors.black,
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(8 * 1.4),
        ),
        padding: const EdgeInsets.symmetric(horizontal: 16 * 1.4, vertical: 8 * 1.4),
        textStyle: const TextStyle(fontSize: 16 * 1.4)
      ),
      child: Text(text),
    );
  }
}

class CoffeeCard extends StatelessWidget {
  const CoffeeCard({
    super.key,
    required this.imageUrl,
    required this.rating,
    required this.name,
    required this.description,
    required this.price,
  });

  final String imageUrl;
  final double rating;
  final String name;
  final String description;
  final String price;

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      width: 220 * 1.4,
      child: Card(
        color: Colors.white, // Set the card background color to white
        child: Padding(
          padding: const EdgeInsets.all(8.0 * 1.4),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Stack(
                children: [
                  ClipRRect(
                    borderRadius: BorderRadius.circular(12 * 1.4),
                    child: Image.network(
                      imageUrl,
                      height: 160 * 1.4,
                      width: double.infinity,
                      fit: BoxFit.cover,
                    ),
                  ),
                  Positioned(
                    top: 8 * 1.4,
                    left: 8 * 1.4,
                    child: Container(
                      padding: const EdgeInsets.symmetric(
                          horizontal: 6 * 1.4, vertical: 2 * 1.4),
                      decoration: BoxDecoration(
                        color: Colors.black.withOpacity(0.5),
                        borderRadius: BorderRadius.circular(8 * 1.4),
                      ),
                      child: Row(
                        children: [
                          const Icon(Icons.star, color: Colors.yellow, size: 16 * 1.4),
                          Text(
                            rating.toString(),
                            style: const TextStyle(color: Colors.white, fontSize: 14 * 1.4),
                          ),
                        ],
                      ),
                    ),
                  ),
                ],
              ),
              const SizedBox(height: 8 * 1.4),
              Text(
                name,
                style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16 * 1.4, color: Colors.black), // Set text color to black
              ),
              Text(
                description,
                style: const TextStyle(color: Colors.grey, fontSize: 12 * 1.4),
              ),
              const SizedBox(height: 8 * 1.4),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Text(
                    '\$$price',
                    style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16 * 1.4, color: Colors.black), // Set text color to black
                  ),
                  Container(
                    decoration: BoxDecoration(
                      color: Colors.orange.shade200,
                      borderRadius: BorderRadius.circular(8 * 1.4),
                    ),
                    child: const Icon(Icons.add),
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}


THIRD CODE:
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Gemstore',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.white),
        useMaterial3: true,
      ),
      home: const HomePage(),
      debugShowCheckedModeBanner: false,
    );
  }
}

class HomePage extends StatefulWidget {
  const HomePage({super.key});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  int _selectedIndex = 0;
  final List<String> _productImages = [
    'https://images.pexels.com/photos/17765100/pexels-photo-17765100/free-photo-of-a-young-woman-sitting-on-the-ground-with-her-hands-on-her-face.jpeg?auto=compress&cs=tinysrgb&w=1200',
    'https://images.pexels.com/photos/8801046/pexels-photo-8801046.jpeg?auto=compress&cs=tinysrgb&w=1200',
    'https://images.pexels.com/photos/28774862/pexels-photo-28774862/free-photo-of-stylish-women-s-sportwear-studio-photoshoot.jpeg?auto=compress&cs=tinysrgb&w=1200',
  ];
  final List<String> _productNames = [
    'Silk Sweater',
    'Long Sleeve Dress',
    'Sportwear Set',
  ];
  final List<String> _productPrices = [
    '\$35.00',
    '\$45.00',
    '\$80.00',
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.white,
        surfaceTintColor: Colors.white,
        leading: IconButton(
          icon: const Icon(Icons.menu),
          onPressed: () {},
        ),
        title: const Text('Gemstore'),
        centerTitle: true,
        actions: [
          IconButton(
            icon: const Icon(Icons.notifications_none),
            onPressed: () {},
          ),
        ],
      ),
      body: SingleChildScrollView(
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const SizedBox(height: 20),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                _buildCategoryButton(Icons.female, 'Women'),
                _buildCategoryButton(Icons.male, 'Men'),
                _buildCategoryButton(Icons.lightbulb_outline, 'Accessories'),
                _buildCategoryButton(Icons.nature, 'Root'),
                _buildCategoryButton(Icons.face, 'Beauty'),
              ],
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.symmetric(horizontal: 16.0),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(12.0),
                child: Stack(
                  children: [
                    Image.network(
                      'https://images.pexels.com/photos/17782556/pexels-photo-17782556/free-photo-of-a-woman-in-a-hat-and-gloves-posing-for-a-photo.jpeg?auto=compress&cs=tinysrgb&w=1200',
                      height: 250,
                      width: double.infinity,
                      fit: BoxFit.cover,
                    ),
                    Positioned(
                      top: 20,
                      right: 20,
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          const Text(
                            'Autumn',
                            style: TextStyle(
                              fontSize: 24,
                              fontWeight: FontWeight.bold,
                              color: Colors.white,
                            ),
                          ),
                          const Text(
                            'Collection',
                            style: TextStyle(
                              fontSize: 24,
                              fontWeight: FontWeight.bold,
                              color: Colors.white,
                            ),
                          ),
                          const Text(
                            '2022',
                            style: TextStyle(
                              fontSize: 24,
                              fontWeight: FontWeight.bold,
                              color: Colors.white,
                            ),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.symmetric(horizontal: 16.0),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  const Text(
                    'Feature Products',
                    style: TextStyle(
                      fontSize: 18,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  TextButton(
                    onPressed: () {},
                    child: const Text('Show all'),
                  ),
                ],
              ),
            ),
            SizedBox(
              height: 300,
              child: ListView.builder(
                scrollDirection: Axis.horizontal,
                itemCount: _productNames.length,
                itemBuilder: (context, index) {
                  return Container(
                    width: 200,
                    margin: const EdgeInsets.symmetric(horizontal: 8.0),
                    child: Card(
                      surfaceTintColor: Colors.white,
                      child: Padding(
                        padding: const EdgeInsets.all(8.0),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            ClipRRect(
                              borderRadius: BorderRadius.circular(12.0),
                              child: Image.network(
                                _productImages[index],
                                height: 180,
                                width: double.infinity,
                                fit: BoxFit.cover,
                              ),
                            ),
                            const SizedBox(height: 8),
                            Text(
                              _productNames[index],
                              style: const TextStyle(fontWeight: FontWeight.bold),
                            ),
                            const SizedBox(height: 4),
                            Text(
                              _productPrices[index],
                              style: const TextStyle(
                                color: Colors.black87,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  );
                },
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomNavigationBar(
        items: const <BottomNavigationBarItem>[
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: '',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.search),
            label: '',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.shopping_bag),
            label: '',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.person_outline),
            label: '',
          ),
        ],
        currentIndex: _selectedIndex,
        selectedItemColor: Colors.amber[800],
        showSelectedLabels: false,
        showUnselectedLabels: false,
        unselectedItemColor: Colors.grey,
        onTap: _onItemTapped,
      ),
    );
  }

  Widget _buildCategoryButton(IconData icon, String label) {
    return Column(
      children: [
        Container(
          width: 50,
          height: 50,
          decoration: BoxDecoration(
            shape: BoxShape.circle,
            border: Border.all(color: Colors.grey.shade300),
          ),
          child: IconButton(
            icon: Icon(icon),
            onPressed: () {},
          ),
        ),
        const SizedBox(height: 8),
        Text(
          label,
          style: const TextStyle(fontSize: 12),
        ),
      ],
    );
  }

  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }
}